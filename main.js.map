{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/test-routing/test-routing.component.ts","./src/app/components/test-routing/test-routing.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  firebase : {\n    apiKey: 'AIzaSyBV4Kbet5OfrZtLWF2h6wsPqEhrt3Rwz94',\n    authDomain: 'smy-website.firebaseapp.com',\n    projectId: 'smy-website',\n    storageBucket: 'smy-website.appspot.com',\n    messagingSenderId: '427193380526',\n    appId: '1:427193380526:web:d31389d1d3599188c8473f',\n    measurementId: 'G-WJ079Y99GW'\n  },\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport firebase from 'firebase';\nimport RecaptchaVerifier = firebase.auth.RecaptchaVerifier;\nimport ConfirmationResult = firebase.auth.ConfirmationResult;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'sma-website';\n  phone = '';\n  showCodeInput = false;\n  codeInput = '';\n  cr: ConfirmationResult;\n  firebaseConfig = {\n    apiKey: 'AIzaSyBV4Kbet5OfrZtLWF2h6wsPqEhrt3Rwz94',\n    authDomain: 'smy-website.firebaseapp.com',\n    projectId: 'smy-website',\n    storageBucket: 'smy-website.appspot.com',\n    messagingSenderId: '427193380526',\n    appId: '1:427193380526:web:d31389d1d3599188c8473f',\n    measurementId: 'G-WJ079Y99GW'\n  };\n\n  // Initialize Firebase\n\n\n  ngOnInit(): void {\n    firebase.initializeApp(this.firebaseConfig);\n    firebase.analytics();\n    firebase.auth().languageCode = 'en';\n  }\n\n  private getVerifier(): RecaptchaVerifier {\n    return new firebase.auth.RecaptchaVerifier('SIGN_IN', {\n      size: 'invisible',\n      callback: (response: any) => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        // this.onSignInSubmit();\n      }\n    });\n  }\n\n  sendOTP(): any {\n    const getVerifier = this.getVerifier();\n    this.onSignInSubmit(getVerifier);\n  }\n\n  private onSignInSubmit(x: RecaptchaVerifier): any {\n    this.showCodeInput = true;\n    firebase.auth().signInWithPhoneNumber(this.phone, x)\n      .then((confirmationResult) => {\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        // ...\n        this.cr = confirmationResult;\n      }).catch((error) => {\n      // Error; SMS not sent\n      // ...\n    });\n  }\n\n  processConfirmation(): any {\n    this.cr.confirm(this.codeInput).then((value) => {\n      console.log(value);\n        alert('Logged in successfully');\n      }\n    ).catch((error) => {\n      console.log('error occurred');\n      console.log(error);\n      alert('login failed');\n    });\n  }\n}\n","<p>HARE KRISHNA HARE KRISHNA KRISHNA KRISHNA HARE HARE HARE RAM HARE RAM RAM RAM HARE HARE</p>\n\n\n\n<a routerLink=\"test-routing\">Check routing</a>\n<input [(ngModel)]=\"phone\" placeholder=\"enter you phone number\">\n<button id=\"{{ 'SIGN_IN' }}\" (click)=\"sendOTP()\">Send OTP!</button>\n<div *ngIf=\"showCodeInput\">\n  <input [(ngModel)]=\"codeInput\"> Enter the code received here\n  <button (click)=\"processConfirmation()\">Click To proceed</button>\n</div>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestRoutingComponent } from './components/test-routing/test-routing.component';\nimport {FormsModule} from '@angular/forms';\nimport {AngularFireModule} from '@angular/fire';\nimport {environment} from '../environments/environment';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestRoutingComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-routing',\n  templateUrl: './test-routing.component.html',\n  styleUrls: ['./test-routing.component.css']\n})\nexport class TestRoutingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>test-routing works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {TestRoutingComponent} from './components/test-routing/test-routing.component';\n\nconst routes: Routes = [{\n  component: TestRoutingComponent,\n  path: 'test-routing'\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}